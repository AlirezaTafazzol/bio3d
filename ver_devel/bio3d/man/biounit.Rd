% Generated by roxygen2 (4.0.2): do not edit by hand
\name{biounit}
\alias{biounit}
\title{Biological Units Construction}
\usage{
biounit(pdb, biomat = NULL, ncore = NULL)
}
\arguments{
\item{pdb}{an object of class \code{pdb} as obtained from
function \code{\link{read.pdb}}.}

\item{biomat}{a list object as returned by \code{read.pdb}
(pdb$remark$biomat), containing matrices for
symmetry operation on individual chains to build biological units.
It will override the matrices stored in \code{pdb}.}

\item{ncore}{number of CPU cores used to do the calculation. By default
         (\code{ncore=NULL}), use all available CPU cores.}
}
\value{
a list of \code{pdb} objects with each representing an individual
   biological unit.

   If the number of generated copies is small (<=10), each copy is represented as
   independent chains with distinct chain IDs.
   If the number of copies is large (>10), copies are represented as multiple 'models'.
}
\description{
Construct biological assemblies/units based on a 'pdb' object.
}
\details{
A valid structural/simulation study should be performed on the biological
unit of a protein system. For example, the alpha2-beta2 tetramer form of
hemoglobin. However, canonical PDB files usually contain the asymmetric unit of
the crystal cell, which can be:
\enumerate{
     \item One biological unit
     \item A portion of a biological unit
     \item Multiple biological units
}
The function performs symmetry operations to the coordinates based on the
transformation matrices stored in a 'pdb' object returned by
\code{\link{read.pdb}}, and returns biological units stored as a list of
\code{pdb} objects.
}
\examples{
\donttest{
   pdb <- read.pdb("2dn1")
   biounit <- biounit(pdb)
   pdb
   biounit
}
\dontrun{
   biounit <- biounit(read.pdb("2bfu"))
   write.pdb(biounit[[1]], file="biounit.pdb")
   # open the pdb file in VMD to have a look on the biological unit
}
}
\author{
Xin-Qiu Yao
}
\seealso{
\code{\link{read.pdb}}
}

