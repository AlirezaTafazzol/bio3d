\name{pdb2aln}
\alias{pdb2aln}
\title{ Align a PDB structure to an existing alignment }
\description{
  Find the best alignment between a PDB structure and an 
  existing alignment. Then, given a set of residue indices
  defined for the original alignment, return the equivalent 
  CA atom indices in the PDB coordinates.
}
\usage{
pdb2aln(aln, pdb, inds, aln.id=NULL, id="seq", file="pdb2aln.fa")
}
\arguments{
  \item{aln}{ an alignment list object with \code{id} and \code{ali}
    components, similar to that generated by \code{\link{read.fasta}},
    \code{\link{read.fasta.pdb}}, and \code{\link{seqaln}}. }
  \item{pdb}{ the PDB object. }
  \item{inds}{ a numeric vector or a list object containing the 
        original indices for the alignment. }
  \item{aln.id}{ id of the sequence in the original alignment 
     that is closest to the sequence of the PDB structure. }
  \item{id}{ id for the PDB sequence in the new alignment. }
  \item{file}{ file name for outputing the new alignment. }
}
\details{
  This function performs the routine procedure to find the indices of the 
  CA atoms in a PDB structure, the residue numbers of which are 
  equivalent to the predefined positions in an existing alignment. For
  example, when we project a MD simulation trajectory onto the low dimensional
  subspace derived from the PCA of cystallographic structures, we need 
  first align the sequence of the simulated protein to the original
  alignment of crystal structures (or find out the identical sequence
  in the alignment if the simulation started from one of the crystal
  structures). Then residues of the simulation system equivalent to those
  used for fitting crystal structures and performing PCA can be identified. 
  The corresponding CA atoms to be used for fitting and projecting the 
  trajectory are then obtained by mapping the equivalent residues onto
  the topology of the trajectory. 

  When \code{aln.id} is provided, the function will do pairwise alignment 
  between the PDB sequence and the sequence in the alignment \code{aln} 
  with id containing \code{aln.id}. This is the best way to use the
  function if the simulated protein has an identical or very similar sequence 
  to one of the sequences in the alignment \code{aln}.
}
\value{
  Returns a list of class "selection" as generated by \code{\link{atom.select}}
}
\references{
  Grant, B.J. et al. (2006) \emph{Bioinformatics} \bold{22}, 2695--2696.
}
\author{ Xin-Qiu Yao & Barry Grant }
\seealso{ \code{\link{rmsd}}, \code{\link{read.pdb}},
  \code{\link{read.fasta.pdb}}, \code{\link{read.dcd}} }
\examples{
\dontrun{
##--- Read aligned PDB coordinates (CA only)
aln  <- read.fasta(system.file("examples/kif1a.fa",package="bio3d"))
pdb.path = system.file("examples",package="bio3d")
pdbs <- read.fasta.pdb(aln, pdb.path = pdb.path, pdbext = ".ent")

##--- Read PDB coordinate for one structure (all atoms)
id <- "d2kin.1"
pdb <- read.pdb(system.file(paste("examples/", id, ".ent", sep=""), package="bio3d"))

# map the non-gap positions
pc.inds <- gap.inspect(pdbs$resno)
npc.inds <- pdb2aln(aln=pdbs, pdb=pdb, inds=pc.inds$f.inds, id=id)

##--- fit the atomic coordinates to the aligned X-ray structure
xyz <- fit.xyz(pdbs$xyz[1,], pdb$xyz, atom2xyz(pc.inds$f.inds), npc.inds$xyz)

}

}
\keyword{ utilities }

