\name{critical.residues}
\alias{critical.residues}
\title{
Critical Residues From Community Analysis
}
\description{
This function reports a numeric table with the most important couples of
residues belonging to different communities and sharing a connection.
}
\usage{
critical.residues(network.graph = network.graph, communities =
communities, cij.matrix=NULL, method="abs.cij")
}
\arguments{
\item{ network.graph }{
an igraph network object, such as generated by \sQuote{cna} function.
}
\item{ communities }{
an igraph community object, such as generated by \sQuote{cna} function.
}
\item{ method }{ Either "abs.cij" or "btwn". This will specify the
    method to rank the intercommunities edges. }
\item{ cij.matrix }{ If "abs.cij" was chosen, cij.matrix must be
    specified and correspondig to a numeric matrix with the cij
    couplings used to build the network specified in network.graph
    argument. }
}
\value{
This function returns a numeric table with 6 columns. In the first
column is reported either the "abs.cij" or the "btwn" values of the
critical edges, in columns 2 and 3 the nodes connected by each critical
edge, in columns 4 and 5 the community memberships of those nodes and in
columns 6 the edge number.
}

\seealso{
graph.adjacency, edge.betweenness.community
}
\examples{
# Read example trajectory file
trtfile <- system.file("examples/hivp.dcd", package="bio3d")
trj <- read.dcd(trtfile)

# Read the starting PDB file to determine atom correspondence
pdbfile <- system.file("examples/hivp.pdb", package="bio3d")
pdb <- read.pdb(pdbfile)

# select residues 24 to 27 and 85 to 90 in both chains
inds <- atom.select(pdb,"///24:27,85:90///CA/")

# lsq fit of trj on pdb
xyz <- fit.xyz(pdb$xyz, trj, fixed.inds=inds$xyz, mobile.inds=inds$xyz)

# calculate dynamical cross-correlation matrix
cij <- dccm(xyz)

# Build, and betweeness cluster, a network graph 
net <- cna(cij)

# Plot the network
xy <- plot.cna(net)

## critical nodes table printing
crit.nodes <- critical.residues(net, method="abs.cij")

crit.nodes

}
\keyword{utility}

